
## -------------------------------------------------------------
## Load (Dev/Test/Prod) server specific properties
## -------------------------------------------------------------
## This is a possible alternative to using JNDI to set environment
## properties externally (to the WAR file).  This is another way 
## your Dev, Test and Prod servers can have different properties.

#load.properties.override=${CATALINA_HOME}/conf/myapp.ebean.properties

ebean.autofetch.querytuning=true
ebean.autofetch.profiling=true
ebean.autofetch.implicitmode=default_off
ebean.autofetch.profiling.min=1
ebean.autofetch.profiling.base=10
#ebean.autofetch.profiling.rate=0.05



ebean.ddl.generate=false
ebean.ddl.run=false


#ebean.ddl.generate=true
#ebean.ddl.run=true


ebean.debug.sql=true

## Log transaction begins and ends etc
## (0=NoLogging 1=minimal ... 9=logAll)
#ebean.debug.transaction=1

ebean.log.directory=logs
#ebean.log.directory=${catalina.base}/logs/trans




## -------------------------------------------------------------
## DataSources (If using default Ebean DataSourceFactory)
## ------------------------------------------------------------- 

# use default   
ebean.datasource.factory=default  

#datasource.default=h2
#datasource.default=mysql
datasource.default=pg

datasource.h2.username=sa
datasource.h2.password=
datasource.h2.databaseUrl=jdbc:h2:database/test
datasource.h2.databaseDriver=org.h2.Driver
datasource.h2.minConnections=1
datasource.h2.maxConnections=25
datasource.h2.heartbeatsql=select 'x'
datasource.h2.isolationlevel=read_committed
datasource.h2.capturestacktrace=true


datasource.mysql.username=junk
datasource.mysql.password=junk
datasource.mysql.databaseUrl=jdbc:mysql://127.0.0.1:3306/zsite
datasource.mysql.databaseDriver=com.mysql.jdbc.Driver
datasource.mysql.minConnections=1
datasource.mysql.maxConnections=25
#datasource.mysql.heartbeatsql=select count(*) from dual
datasource.mysql.isolationlevel=read_committed


datasource.ora.username=junk
datasource.ora.password=junk
datasource.ora.databaseUrl=jdbc:oracle:thin:@127.0.0.1:1521:XE
datasource.ora.databaseDriver=oracle.jdbc.driver.OracleDriver
datasource.ora.minConnections=1
datasource.ora.maxConnections=25
datasource.ora.heartbeatsql=select count(*) from dual
datasource.ora.isolationlevel=read_committed


datasource.pg.username=postgres
datasource.pg.password=postgres
datasource.pg.databaseUrl=jdbc:postgresql://127.0.0.1:5432/foo
datasource.pg.databaseDriver=org.postgresql.Driver
datasource.pg.minConnections=1
datasource.pg.maxConnections=25
datasource.pg.isolationlevel=read_committed
#datasource.pg.heartbeatsql=select 'a'


datasource.ms05.username=junk
datasource.ms05.password=junk
datasource.ms05.databaseUrl=jdbc:sqlserver://127.0.0.1;
datasource.ms05.databaseDriver=com.microsoft.sqlserver.jdbc.SQLServerDriver
datasource.ms05.minConnections=1
datasource.ms05.maxConnections=25
datasource.ms05.heartbeatsql=select count(*) from j_test
datasource.ms05.isolationlevel=read_committed


## -------------------------------------------------------------
## How property Expressions are evaluated (com.avaje.lib.PropertyEvaluator)
## -------------------------------------------------------------
## avaje.properties can contain 'expressions'.  
## For example...
##
## log.directory=${catalina.base}/logs
##
##
## Expressions start with "${" and end with "}"
## JNDI Expressions start with "${jndi:" and end with "}"
##
##
## Examples:
## ${jndi:MyJndiProperty}
## ${CATALINA_HOME}
## ${catalina.base}
## ${any.property.in.avaje.properties}
##
##
## 
## If its a JNDI Expression
##    ... return the JNDI lookup value
##
## Otherwise get the first non-null value from
##    Environment variable - java.lang.System.getenv()
##    Java System property - java.lang.System.getProperty()
##    Other Avaje property - com.avaje.lib.SystemProperties.getProperty()
##
## If all these returned null
##    return the expression itself as the value
##
